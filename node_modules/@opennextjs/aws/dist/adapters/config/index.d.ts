export declare const NEXT_DIR: string;
export declare const OPEN_NEXT_DIR: string;
export declare const NextConfig: import("../../types/next-types").NextConfig;
export declare const BuildId: string;
export declare const HtmlPages: string[];
export declare const RoutesManifest: {
    basePath: string | undefined;
    rewrites: {
        beforeFiles: import("../../types/next-types").RewriteDefinition[];
        afterFiles: import("../../types/next-types").RewriteDefinition[];
        fallback: import("../../types/next-types").RewriteDefinition[];
    };
    redirects: import("../../types/next-types").RedirectDefinition[];
    routes: {
        static: import("../../types/next-types").RouteDefinition[];
        dynamic: import("../../types/next-types").RouteDefinition[];
        data: {
            static: import("../../types/next-types").DataRouteDefinition[];
            dynamic: import("../../types/next-types").DataRouteDefinition[];
        };
    };
    locales: string[];
};
export declare const ConfigHeaders: import("../../types/next-types").Header[] | undefined;
export declare const PrerenderManifest: import("../../types/next-types").PrerenderManifest;
export declare const AppPathsManifestKeys: string[];
export declare const MiddlewareManifest: import("../../types/next-types").MiddlewareManifest;
export declare const AppPathsManifest: Record<string, string>;
export declare const AppPathRoutesManifest: Record<string, string>;
export declare const FunctionsConfigManifest: import("../../types/next-types").FunctionsConfigManifest;
