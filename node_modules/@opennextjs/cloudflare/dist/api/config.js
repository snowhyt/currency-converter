/**
 * Defines the OpenNext configuration that targets the Cloudflare adapter
 *
 * @param options options that enabled you to configure the application's behavior
 * @returns the OpenNext configuration object
 */
export function defineCloudflareConfig(options = {}) {
    const { incrementalCache, tagCache, queue } = options;
    return {
        default: {
            override: {
                wrapper: "cloudflare-node",
                converter: "edge",
                incrementalCache: resolveOverride(incrementalCache),
                tagCache: resolveOverride(tagCache),
                queue: resolveOverride(queue),
            },
        },
        middleware: {
            external: true,
            override: {
                wrapper: "cloudflare-edge",
                converter: "edge",
                proxyExternalRequest: "fetch",
            },
        },
    };
}
function resolveOverride(value) {
    if (!value || value === "dummy") {
        return "dummy";
    }
    if (value === "direct") {
        return "direct";
    }
    return (typeof value === "function" ? value : () => value);
}
