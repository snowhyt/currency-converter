import type { ContentUpdater } from "./content-updater.js";
/**
 * The following Next.js code sets values in the incremental cache for fetch calls:
 *  https://github.com/vercel/next.js/blob/e5fc495e3d4/packages/next/src/server/lib/patch-fetch.ts#L690-L728
 *
 * The issue here is that this promise is never awaited in the Next.js code (since in a standard node.js server
 * the promise will eventually simply just run) but we do need to run it inside `waitUntil` (so that the worker
 * is not killed before the promise is fully executed), without that this promise gets discarded and values
 * don't get saved in the incremental cache.
 *
 * This function wraps the promise in a `waitUntil` call (retrieved from `globalThis.__openNextAls.getStore()`).
 */
export declare function patchFetchCacheSetMissingWaitUntil(updater: ContentUpdater): import("esbuild").Plugin;
export declare const rule = "\nrule:\n  kind: call_expression\n  pattern: $PROMISE\n  all:\n    - has: { pattern: $_.arrayBuffer().then, stopBy: end }\n    - has: { pattern: \"Buffer.from\", stopBy: end }\n    - any:\n        - inside:\n            kind: sequence_expression\n            inside:\n                kind: return_statement\n        - inside:\n            kind: expression_statement\n            precedes:\n                kind: return_statement\n    - has: { pattern: $_.FETCH, stopBy: end }\n\nfix: |\n  globalThis.__openNextAls?.getStore()?.waitUntil?.($PROMISE)\n";
