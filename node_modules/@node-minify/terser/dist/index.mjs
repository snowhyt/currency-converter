var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// src/index.ts
import { minify } from "terser";
import { utils } from "@node-minify/utils";
var require_src = __commonJS({
  "src/index.ts"(exports, module) {
    var minifyTerser = async ({ settings, content, callback, index }) => {
      try {
        const contentMinified = await minify(content ?? "", settings?.options);
        if (contentMinified.map && typeof settings?.options?.sourceMap?.url === "string") {
          utils.writeFile({ file: settings.options.sourceMap.url, content: contentMinified.map, index });
        }
        if (settings && !settings.content && settings.output) {
          utils.writeFile({ file: settings.output, content: contentMinified.code, index });
        }
        if (callback) {
          return callback(null, contentMinified.code);
        }
        return contentMinified.code;
      } catch (error) {
        return callback && callback(error);
      }
    };
    minifyTerser.default = minifyTerser;
    module.exports = minifyTerser;
  }
});
export default require_src();
/*!
 * node-minify
 * Copyright(c) 2011-2023 Rodolphe Stoclin
 * MIT Licensed
 */
//# sourceMappingURL=index.mjs.map