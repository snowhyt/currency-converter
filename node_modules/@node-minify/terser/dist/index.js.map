{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/*!\n * node-minify\n * Copyright(c) 2011-2023 Rodolphe Stoclin\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nimport { minify } from 'terser';\nimport { utils } from '@node-minify/utils';\nimport { MinifierOptions } from '@node-minify/types';\n\ntype OptionsTerser = {\n  sourceMap?: { url: string };\n};\n\ntype SettingsTerser = {\n  options: OptionsTerser;\n};\n\ntype MinifierOptionsTerser = {\n  settings: SettingsTerser;\n};\n\n/**\n * Run terser.\n *\n * @param {Object} settings\n * @param {String} content\n * @param {Function} callback\n */\nconst minifyTerser = async ({ settings, content, callback, index }: MinifierOptions & MinifierOptionsTerser) => {\n  try {\n    const contentMinified = await minify(content ?? '', settings?.options);\n    if (contentMinified.map && typeof settings?.options?.sourceMap?.url === 'string') {\n      utils.writeFile({ file: settings.options.sourceMap.url, content: contentMinified.map, index });\n    }\n    if (settings && !settings.content && settings.output) {\n      utils.writeFile({ file: settings.output, content: contentMinified.code, index });\n    }\n    if (callback) {\n      return callback(null, contentMinified.code);\n    }\n    return contentMinified.code;\n  } catch (error) {\n    return callback && callback(error);\n  }\n};\n\n/**\n * Expose `minifyTerser()`.\n */\nminifyTerser.default = minifyTerser;\nexport = minifyTerser;\n"],"mappings":";;;AASA,oBAAuB;AACvB,mBAAsB;AAsBtB,IAAM,eAAe,OAAO,EAAE,UAAU,SAAS,UAAU,MAAM,MAA+C;AAC9G,MAAI;AACF,UAAM,kBAAkB,UAAM,sBAAO,WAAW,IAAI,UAAU,OAAO;AACrE,QAAI,gBAAgB,OAAO,OAAO,UAAU,SAAS,WAAW,QAAQ,UAAU;AAChF,yBAAM,UAAU,EAAE,MAAM,SAAS,QAAQ,UAAU,KAAK,SAAS,gBAAgB,KAAK,MAAM,CAAC;AAAA,IAC/F;AACA,QAAI,YAAY,CAAC,SAAS,WAAW,SAAS,QAAQ;AACpD,yBAAM,UAAU,EAAE,MAAM,SAAS,QAAQ,SAAS,gBAAgB,MAAM,MAAM,CAAC;AAAA,IACjF;AACA,QAAI,UAAU;AACZ,aAAO,SAAS,MAAM,gBAAgB,IAAI;AAAA,IAC5C;AACA,WAAO,gBAAgB;AAAA,EACzB,SAAS,OAAP;AACA,WAAO,YAAY,SAAS,KAAK;AAAA,EACnC;AACF;AAKA,aAAa,UAAU;AACvB,iBAAS;","names":[]}